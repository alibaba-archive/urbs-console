// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/service/group.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	thrid "github.com/teambition/urbs-console/src/dto/thrid"
	reflect "reflect"
)

// MockGroupMemberInterface is a mock of GroupMemberInterface interface
type MockGroupMemberInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGroupMemberInterfaceMockRecorder
}

// MockGroupMemberInterfaceMockRecorder is the mock recorder for MockGroupMemberInterface
type MockGroupMemberInterfaceMockRecorder struct {
	mock *MockGroupMemberInterface
}

// NewMockGroupMemberInterface creates a new mock instance
func NewMockGroupMemberInterface(ctrl *gomock.Controller) *MockGroupMemberInterface {
	mock := &MockGroupMemberInterface{ctrl: ctrl}
	mock.recorder = &MockGroupMemberInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGroupMemberInterface) EXPECT() *MockGroupMemberInterfaceMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockGroupMemberInterface) List(ctx context.Context, groupId, pageToken string, pageSize int) (*thrid.ListGroupMembersResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx, groupId, pageToken, pageSize)
	ret0, _ := ret[0].(*thrid.ListGroupMembersResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockGroupMemberInterfaceMockRecorder) List(ctx, groupId, pageToken, pageSize interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockGroupMemberInterface)(nil).List), ctx, groupId, pageToken, pageSize)
}
